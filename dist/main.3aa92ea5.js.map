{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","e","stopPropagation","splice","setDataInLS","window","open","prompt","indexOf","console","log","push","toUpperCase","hashMapStr","stringify","setItem","onbeforeunload","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.3aa92ea5.js","sourceRoot":"..\\src","sourcesContent":["// console.log(jQuery)\r\n// console.log($)\r\n\r\n\r\nconst $siteList = $(\".siteList\")\r\nconst $lastLi = $siteList.find(\"li.last\")\r\nconst x = localStorage.getItem(\"x\")\r\n// console.log(x)\r\nconst xObject = JSON.parse(x)\r\n// console.log(xObject)\r\nconst hashMap = xObject || [\r\n  {logo: \"A\", logoType: \"text\", url: \"https://www.acfun.cn\"},\r\n  {logo: \"B\", logoType: \"image\", url: \"https://www.bilibili.com\"}\r\n]\r\n// 用于优化 link 显示的内容（在渲染html结构时调用）\r\nconst simplifyUrl = (url) => {\r\n  // replace 返回新的字符串（所以可以链式调用）\r\n  return url.replace(\"https://\", \"\")\r\n    .replace(\"http://\", \"\")\r\n    .replace(\"www.\", \"\")\r\n    .replace(/\\/.*/, \"\")  // 删除 / 开头的内容 （需要转义）\r\n}\r\nconst render = () => {\r\n  $siteList.find(\"li:not(.last)\").remove() // 把之前的li都删掉，然后添加新的\r\n  hashMap.forEach((node, index) => { // 遍历 hashMap，把每一项放到 lastLi 之前\r\n    // console.log(node)\r\n    const $li = $(`\r\n         <li>\r\n           <!--<a href=\"${node.url}\">-->\r\n             <div class=\"site\">\r\n               <div class=\"logo\">${node.logo[0]}</div>\r\n               <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n               <div class=\"close\">\r\n                <svg class=\"icon\">\r\n                  <use xlink:href=\"#icon-close\"></use>\r\n                </svg>\r\n               </div>\r\n             </div>\r\n           <!--</a>-->\r\n         </li>\r\n    `).insertBefore($lastLi)  // 把hashMap里的每一项都插入到按钮前\r\n    \r\n    // 需求：点击li中的close关闭按钮，不会（冒泡）触发到跳转\r\n    $li.on(\"click\", \".close\", (e) => {\r\n      e.stopPropagation()  // 阻止冒泡\r\n      // console.log(hashMap)\r\n      hashMap.splice(index, 1)\r\n      setDataInLS()\r\n      render()\r\n    })\r\n    // 结果：发现用 a 标签，始终会触发（阻止冒泡无效）。弃用 a 标签，用 js 实现跳转\r\n    $li.on(\"click\", () => {\r\n      window.open(node.url, \"_blank\")  // '_self'当前窗口打开；'_blank'新窗口打开\r\n    })\r\n  })\r\n}\r\nrender()\r\n\r\n$(\".addButton\").on(\"click\", () => {\r\n  // 弹窗\r\n  let url = window.prompt(\"请输入要添加的网址：\")  // 确定，返回输入内容；取消，返回null\r\n  // url不是以http开头，就自动加上\r\n  // string.indexOf('xxx') => 返回xxx所在的首个下标，如果返回的是0说明xxx是字符串开头单词\r\n  if (url && url.indexOf(\"http\") !== 0) {\r\n    url = \"https://\" + url\r\n  } else {\r\n    return  // 如果 url 为空就结束\r\n  }\r\n  console.log(url)\r\n  \r\n  hashMap.push({\r\n    logo: simplifyUrl(url)[0].toUpperCase(),\r\n    // logoType: \"text\",\r\n    url: url\r\n  })\r\n  setDataInLS()\r\n  render()\r\n})\r\n\r\n// onbeforeunload 离开当前页面之前\r\n// (上述监听，可能有失误率)可每次往hashMap添加（push）新的链接时，就顺便存入 LS 中\r\nconst setDataInLS = () => {\r\n  const hashMapStr = JSON.stringify(hashMap)  // 对象 变 json字符串\r\n  window.localStorage.setItem(\"x\", hashMapStr)\r\n  // console.log('页面要关闭了')\r\n  // console.log(typeof hashMapStr)  // string\r\n}\r\n\r\nwindow.onbeforeunload = () => {\r\n  setDataInLS()\r\n}\r\n\r\n/*\r\n* 键盘事件\r\n* */\r\n// document.addEventListener()\r\n$(document).on(\"keypress\", (e) => {\r\n  // console.log(e.key)\r\n  const {key} = e   // 简写， key = e.key\r\n  console.log(key)\r\n  for (let i = 0; i < hashMap.length; i++) {\r\n    if(hashMap[i].logo.toLowerCase() === key){\r\n      window.open(hashMap[i].url,\"_blank\")\r\n    }\r\n  }\r\n})\r\n"]}